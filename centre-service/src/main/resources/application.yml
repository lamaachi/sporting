spring:
  application:
    name: centre-service
  web:
    cors:
      allowed-origins: ${SPRING_WEB_CORS_ALLOWED-ORIGINS:http://localhost:3000}
      allowed-methods: ${SPRING_WEB_CORS_ALLOWED-METHODS:*}
      allowed-headers: ${SPRING_WEB_CORS_ALLOWED-HEADERS:*}
      allow-credentials: ${SPRING_WEB_CORS_ALLOW-CREDENTIALS:true}
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/centredb}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:lamaachi}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:create} # Options: 'validate', 'update', 'create', 'create-drop'
    show-sql: true
  rabbitmq:
    host: localhost       # RabbitMQ host
    port: 5672            # RabbitMQ port
    username: guest       # RabbitMQ default username
    password: guest       # RabbitMQ default password
    virtual-host: /       # RabbitMQ virtual host (default is '/')
    listener:
      simple:
        retry:
          enabled: true   # Enable retry mechanism for message consumption
          initial-interval: 1000
          max-attempts: 3
          multiplier: 2.0
      acknowledge-mode: auto  # Acknowledge messages automatically
  cloud:
    discovery:
      enabled: true
    config:
      import: optional:configserver:http://config-server:9000
  boot:
    admin:
      client:
        url: ${ADMIN_SERVER_URL:http://localhost:8080}
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE:http://discovery-service:8761/eureka/}
  instance:
    preferIpAddress: true
    hostname: ${EUREKA_INSTANCE_HOSTNAME:centre-service}

#server:
#  port: 8085

# Additional Headers for CORS
Access-Control-Allow-Headers: X-PINGOTHER, Content-Type

centre:
  exchange: event_centre_exchange
