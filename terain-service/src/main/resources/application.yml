spring:
  application:
    name: terain-service
  web:
    cors:
      allowed-origins: ${SPRING_WEB_CORS_ALLOWED-ORIGINS:http://localhost:3000}
      allowed-methods: ${SPRING_WEB_CORS_ALLOWED-METHODS:*}
      allowed-headers: ${SPRING_WEB_CORS_ALLOWED-HEADERS:*}
      allow-credentials: ${SPRING_WEB_CORS_ALLOW-CREDENTIALS:true}
  cloud:
    discovery:
      enabled: true
    config:
      import: optional:configserver:http://config-server:9000
  boot:
    admin:
      client:
        url: ${ADMIN_SERVER_URL:http://localhost:8080}
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:localhost}
    port: ${SPRING_RABBITMQ_PORT:5672}
    username: ${RABBITMQ_DEFAULT_USER:guest}
    password: ${RABBITMQ_DEFAULT_PASS:guest}
    virtual-host: /
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/teraindb}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:lamaachi}
    driver-class-name: org.postgresql.Driver
    jpa:
      database-platform: org.hibernate.dialect.PostgreSQLDialect
      hibernate:
        ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
      show-sql: true

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE:http://discovery-service:8761/eureka/}
  instance:
    prefer-ip-address: true
#server:
#  port: 8084
Access-Control-Allow-Headers: X-PINGOTHER, Content-Type
terrain:
  exchange: event_terrain_exchange
