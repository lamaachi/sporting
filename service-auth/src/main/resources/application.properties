spring.application.name=service-auth

server.port=9093

aws.cognito.userPoolId=us-east-1_EFk0O4Bg5
aws.cognito.clientId=5a6cmfelb5uep60k3f6irfvjid
aws.cognito.clientSecret=1mkuud3cnjj0q2nnoe7lai11davuf3c4edjgpirmj1r3rl5ubumu
aws.cognito.region=us-east-1

#utiliser par les classes
cognito.endpoint=https://cognito-idp.us-east-1.amazonaws.com/
cognito.clientId=5a6cmfelb5uep60k3f6irfvjid
cognito.clientSecret=1mkuud3cnjj0q2nnoe7lai11davuf3c4edjgpirmj1r3rl5ubumu


spring.cloud.discovery.enabled=true
spring.boot.admin.client.url=${ADMIN_SERVER_URL:http://localhost:8080}

eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=${EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE:http://discovery-service:8761/eureka/}

eureka.instance.preferIpAddress=true
eureka.instance.hostname=${EUREKA_INSTANCE_HOSTNAME:service-auth}




# RabbitMQ Configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/

# RabbitMQ Listener Configuration
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.initial-interval=1000
spring.rabbitmq.listener.simple.retry.max-attempts=3
spring.rabbitmq.listener.simple.retry.multiplier=2.0
spring.rabbitmq.listener.simple.acknowledge-mode=AUTO



# JWT Config
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/SportingAuth
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
#
#jwt.auth.converter.resource-id=tarik-client
#jwt.auth.converter.principal-attribute=preferred_username
#
#logging.level.org.springframework.security=DEBUG


#keycloak.realm= SportingAuth
#keycloak.auth-server-url= http://localhost:8080/auth/
#keycloak.resource= tarik-client
#keycloak.public-client= true
#keycloak.principal-attribute= name
##spring.cloud.discovery.enabled=true