version: "3.0"
services:
  config-server:
    build:
      context: ./config-server
    container_name: config-server
    ports:
      - "9000:9000"
    environment:
      SPRING_PROFILES_ACTIVE: git
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: http://discovery-service:8761/eureka
      SPRING_CLOUD_CONFIG_SERVER_GIT_URI: https://github.com/lamaachi/sporting-config-repo
      SPRING_CLOUD_CONFIG_SERVER_GIT_DEFAULT_LABEL: main
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
  nginx-service:
    build:
      context: ./nginx-service
      dockerfile: Dockerfile  # Build the custom Nginx image
    container_name: nginx-service
    ports:
      - "8088:80"  # Expose Nginx on port 80
    depends_on:
      - terrain-service
      - centre-service
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network
  # Eureka server
  discovery-service:
    build:
      context: ./discovery-Service
    container_name: discovery-service
    ports:
      - "8761:8761"
    environment:
      EUREKA_SERVER_URL: http://discovery-service:8761/eureka
    networks:
      - app-network

  admin-server:
    build:
      context: ./admin-server
    container_name: admin-server
    ports:
      - "8080:8080"
    environment:
      ADMIN_SERVER_URL: "http://admin-server:8080"
    networks:
      - app-network
    healthcheck:
      test: curl -f http://localhost:8080/actuator/health || exit 1
      interval: 40s
      timeout: 30s
      retries: 3



  centre-service:
    build:
      context: ./centre-service
    container_name: centre-service
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CONFIG_IMPORT: configserver:http://config-server:9000
      SPRING_DATASOURCE_URL: jdbc:postgresql://center-service-db:5432/centredb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: lamaachi
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      DISCOVER-SERVER-URL: http://discovery-service:8761/eureka
      ADMIN_SERVER_URL: http://admin-server:8080
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - app-network
  terrain-service:
    build:
      context: ./terain-service
    container_name: terrain-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CONFIG_IMPORT: configserver:http://config-server:9000
      SPRING_DATASOURCE_URL: jdbc:postgresql://terain-service-db:5432/teraindb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: lamaachi
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      DISCOVER-SERVER-URL: http://discovery-service:8761/eureka
      ADMIN_SERVER_URL: http://admin-server:8080
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "8084:8084"
    networks:
      - app-network

  center-service-db:
    image: postgres:13
    container_name: center-service-db
    environment:
      POSTGRES_DB: centredb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: lamaachi
    ports:
      - "5436:5432"
    volumes:
      - centre_data:/var/lib/postgresql/data
    networks:
      - app-network

  terain-service-db:
    image: postgres:13
    container_name: terain-service-db
    environment:
      POSTGRES_DB: teraindb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: lamaachi
    ports:
      - "5434:5432"
    volumes:
      - postgres_terain_data:/var/lib/postgresql/data
    networks:
      - app-network

  paiment-service:
    build:
      context: ./paiment-service # Chemin vers le Dockerfile de votre service
      dockerfile: Dockerfile
    container_name: paiment-service
    ports:
      - "9091:9092" # Mappez le port de l'application
    environment:
#      SPRING_CONFIG_IMPORT: configserver:http://config-server:9000
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      DISCOVER-SERVER-URL: http://discovery-service:8761/eureka
      ADMIN_SERVER_URL: http://admin-server:8080
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - app-network

  service-auth:
    build:
      context: ./service-auth # Chemin vers le Dockerfile de votre service
      dockerfile: Dockerfile
    container_name: service-auth
    ports:
      - "9090:9093" # Mappez le port de l'application
    environment:
#      SPRING_CONFIG_IMPORT: configserver:http://config-server:9000
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      DISCOVER-SERVER-URL: http://discovery-service:8761/eureka
      ADMIN_SERVER_URL: http://admin-server:8080
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - app-network

  reservation-service:
    build:
      context: ./reservation-service
    container_name: reservation-service
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "8086:8086"
    environment:
      SPRING_PROFILES_ACTIVE: docker
#      SPRING_CONFIG_IMPORT: configserver:http://config-server:9000
      SPRING_DATASOURCE_URL: jdbc:postgresql://reservation-service-db:5432/reservation
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 00990099
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      DISCOVER-SERVER-URL: http://discovery-service:8761/eureka
      ADMIN_SERVER_URL: http://admin-server:8080

    networks:
      - app-network

  reservation-service-db:
    image: postgres:13
    container_name: reservation-service-db
    environment:
      POSTGRES_DB: reservation
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 00990099
    ports:
      - "5435:5432"
    volumes:
      - postgres_reservation_data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_center_data:
  centre_data:
  postgres_terain_data:
  postgres_reservation_data: